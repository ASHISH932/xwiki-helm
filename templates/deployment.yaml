apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xwiki-solr-pv-claim
  version: "{{ .Chart.AppVersion }}"
  chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage }}
    {{- if .Values.storageClass }}
    storageClassName: {{ .Values.storageClass | quote }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
{{- if eq .Values.image.tag "" }}
  {{- if .Values.mysql.enabled }}
    app: "{{ .Values.image.name }}-{{ .Chart.AppVersion }}-lts-mysql-tomcat"
  {{- else if .Values.postgresql.enabled }}
    app: "{{ .Values.image.name }}-{{ .Chart.AppVersion }}-lts-postgres-tomcat"
  {{- end }}
{{- else }}
    app: {{ .Values.image.name | replace "/" "-" }}-{{ .Chart.AppVersion }}-{{ .Values.image.tag }}
{{- end }}
    version: "{{ .Chart.AppVersion }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:  
  replicas: {{ .Values.cluster.replicaCount }}
  serviceName: {{ template "fullname" . }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }} # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
    {{- if eq .Values.image.tag "" }}
      {{- if .Values.mysql.enabled }}
        image: "{{ .Values.image.name }}:lts-mysql-tomcat"
      {{- else if .Values.postgresql.enabled }}
        image: "{{ .Values.image.name }}:lts-postgres-tomcat"
      {{- end }}
    {{- else }}
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
    {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 600
          timeoutSeconds: 5
          scheme: https
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          # successThreshold: 6
          initialDelaySeconds: 100
          timeoutSeconds: 5
          failureThreshold: 5
          scheme: https
          periodSeconds: 10
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
        {{- if .Values.mysql.enabled }}
              name: "{{ .Release.Name }}-mysql"
              key: mysql-password
        {{- else if .Values.postgresql.enabled }}
              name: "{{ .Release.Name }}-postgresql"
              key: postgresql-password
        {{- else }}
              name: {{ .Release.Name | quote }}
              key: DB_PASSWORD
        {{- end }}
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_HOST
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_USER
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_DATABASE
        {{- if .Values.cluster.enabled }}
        - name: CLUSTER
          value: "true"
        - name: CLUSTER_CHANNEL
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: CLUSTER_CHANNEL
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: xwiki-persistent-storage
          mountPath: /usr/local/xwiki
        volumeMounts:
        - name: xwiki-solr-persistent-storage
          mountPath: /opt/solr
        {{- if .Values.cluster.enabled }}
        {{ range $path, $bytes := .Files.Glob "jgroups/**.xml" }}
        - name: jgroups-config-volume
          mountPath: "/usr/local/tomcat/webapps/ROOT/WEB-INF/observation/remote/jgroups/{{ base $path }}"
          subPath: {{ base $path }}
        {{ end }}
        {{- end }}
      volumes:
      - name: xwiki-persistent-storage
        persistentVolumeClaim:
          claimName: xwiki-pv-claim
      volumes:
      - name: xwiki-solr-persistent-storage
        persistentVolumeClaim:
          claimName: xwiki-solr-pv-claim
      {{- if .Values.cluster.enabled }}
      - name: jgroups-config-volume
        configMap:
         name: "jgroups-{{ template "fullname" . }}"
      {{- end }}
          
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xwiki-pv-claim
  version: "{{ .Chart.AppVersion }}"
  chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage }}
    {{- if .Values.storageClass }}
    storageClassName: {{ .Values.storageClass | quote }}
    {{- end }}          

